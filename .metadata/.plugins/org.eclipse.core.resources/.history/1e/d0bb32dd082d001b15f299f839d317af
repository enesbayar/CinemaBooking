package Gui;

import java.awt.BorderLayout;
import java.awt.EventQueue;
import java.awt.Image;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.JLabel;

import Model.Movie;

public class SeatScreen extends JFrame {

	private JPanel contentPane;
	private Movie movie;
	private JLabel[] labelSeats = new JLabel[34];
	private BufferedImage availableSeatImage = null;
	private BufferedImage unavailableSeatImage = null;
	private BufferedImage selectedSeatImage = null;
	private MouseAdapter ma;
	
	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					//SeatScreen frame = new SeatScreen();
					//frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	/*
	public SeatScreen() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 1280, 800);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);
		
	}
*/
	public SeatScreen(Movie movie) {
		this.movie = movie;
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 1280, 800);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		drawSeats();
	}

	private String[] splitSeats() {
		String splitString = movie.getSeats();
		System.out.println("splitString" + splitString);
		String[] splittedString = splitString.split(";");
		return splittedString;
	}

	private void drawSeats() {
		String[] splittedSeats = splitSeats();
		for(int i = 0; i<labelSeats.length; i++){
			
			labelSeats[i] = new JLabel();
			labelSeats[i].setText(null);
			
			if(i<10){
				labelSeats[i].setBounds(250 + (i*50), 50, 50, 50);
			}
			else if(i>9 && i < 18 ){
				if(i<14){
					labelSeats[i].setBounds(250 + (50*(i-10)), 150, 50, 50);
				}
				else{
					labelSeats[i].setBounds(350 + (50 * (i-10)), 150, 50, 50);
				}
			}
			else if(i>17 && i < 26 ){
				if(i<22){
					labelSeats[i].setBounds(250 + (50*(i-18)), 250, 50, 50);
				}
				else{
					labelSeats[i].setBounds(350 + (50 * (i-18)), 250, 50, 50);
				}
				
			}
			else if(i>25 && i < 34 ){
				if(i<30){
					labelSeats[i].setBounds(250 + (50*(i-26)), 350, 50, 50);
				}
				else{
					labelSeats[i].setBounds(350 + (50 * (i-26)), 350, 50, 50);
				}
			}
			
			try {
				if(splittedSeats[i].contains("B")){
					File availableImage = new File("images/available.png");
					File selectedImage = new File("images/selectedSeat.png");
				
					availableSeatImage = ImageIO.read(availableImage);
					ImageIcon availableSeatIcon = new ImageIcon(new ImageIcon(availableSeatImage).getImage().getScaledInstance(50, 50, Image.SCALE_DEFAULT));
					labelSeats[i].setIcon(availableSeatIcon);
				}
				else{
					
					File unavailableImage = new File("images/unavailable.png");
					unavailableSeatImage = ImageIO.read(unavailableImage);
					ImageIcon unavailableSeatIcon = new ImageIcon(new ImageIcon(unavailableSeatImage).getImage().getScaledInstance(50, 50, Image.SCALE_DEFAULT));
					labelSeats[i].setIcon(unavailableSeatIcon);
					
				}
				
				
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			contentPane.add(labelSeats[i]);
			contentPane.repaint();
			
			try {
				File selectedImage = new File("images/selectedSeat.png");
				selectedSeatImage = ImageIO.read(selectedImage);
			} catch (IOException e2) {
				// TODO Auto-generated catch block
				e2.printStackTrace();
			}
			
			ma = new MouseAdapter(){
				
				@Override
				public void mouseClicked(MouseEvent e) {
					if(e.getSource() == labelSeats[0]){
						
							ImageIcon selectedSeatIcon = new ImageIcon(new ImageIcon(selectedSeatImage).getImage().getScaledInstance(50, 50, Image.SCALE_DEFAULT));	
							labelSeats[0].setIcon(selectedSeatIcon);
							contentPane.repaint();
						
						
					}
				}
			};
			labelSeats[i].addMouseListener(ma);
		}
	}
}
